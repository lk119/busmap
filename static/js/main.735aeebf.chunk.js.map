{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","workerClass","require","default","Object","assign","DATA_URL","SIMD","ROUTES","GRID","BUSSTOPS","MAP_STYLE","OPTIONS","OPTION_CHECK_ROUTES_DECILE","OPTION_CHECK_ROUTES_TIME","OPTION_CHECK_ROUTES_TIME_NORM","OPTION_CHECK_STOPS","OPTION_CHECK_SIMD_OUTLINE","OPTION_CHECK_SIMD_FILL","COLOR_SCALE_DECILE","scaleThreshold","domain","range","COLOR_SCALE_TIME_DIFFERENCE_LONG","COLOR_SCALE_TIME_DIFFERENCE_SHORT","COLOR_SCALE_TIME_DIFFERENCE_BOTH","COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE","COLOR_SCALE_TIME_TOTAL","INITIAL_VIEW_STATE","longitude","latitude","zoom","pitch","bearing","maxZoom","AmbientLight","color","intensity","getTooltip","object","html","properties","decile","Math","floor","difference","toFixed","difference_norm","App","simd","routes","grid","roads","busstops","mapStyle","useState","setViewState","selectedMonth","setSelectedMonth","routes_decile","setRoutes_decile","routes_time","setRoutes_time","routes_time_norm","setRoutes_time_norm","stopsChecked","setStopsChecked","simd_outline","setSimd_outline","simd_fill","setSimd_fill","layerVisibility","dec19_decile","mar20_decile","dec19_time","mar20_time","stops","longer_decile","shorter_decile","longer_time","shorter_time","all_decile","all_time","dec19_decile_norm","mar20_decile_norm","dec19_time_norm","mar20_time_norm","longer_decile_norm","shorter_decile_norm","longer_time_norm","shorter_time_norm","all_decile_norm","all_time_norm","simd_only","forEach","key","layers","PolygonLayer","id","data","filled","extruded","getPolygon","d","polygon","getFillColor","getLineColor","getLineWidth","opacity","visible","GeoJsonLayer","pickable","stroked","lineWidthScale","lineWidthMinPixels","f","pointType","getPointRadius","wireframe","getRadius","radiusMinPixels","radiusScale","getElevation","elevationScale","dec_average","mar_average","dec_average_norm","mar_average_norm","initialViewState","controller","onViewStateChange","nextViewState","viewState","mapboxApiAccessToken","class","href","src","process","alt","style","height","width","name","type","value","checked","onChange","e","target","defaultChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.735aeebf.chunk.js","sourcesContent":["import React, {\n  useState\n} from 'react';\nimport {\n  render\n} from 'react-dom';\n\nimport DeckGL from '@deck.gl/react';\nimport {\n  GeoJsonLayer,\n  PolygonLayer,\n  TextLayer\n} from '@deck.gl/layers';\nimport {TripsLayer} from '@deck.gl/geo-layers';\nimport {\n  LightingEffect,\n  AmbientLight,\n  _SunLight as SunLight\n} from '@deck.gl/core';\nimport {\n  scaleThreshold\n} from 'd3-scale';\nimport {\n  DataFilterExtension\n} from '@deck.gl/extensions';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n// @ts-ignore\nimport mapboxgl from 'mapbox-gl';\nimport {StaticMap} from 'react-map-gl';\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst {\n  assign\n} = Object;\n\n// Source data\nconst DATA_URL = {\n  SIMD: 'https://raw.githubusercontent.com/lk119/busmap/main/data/simd_test.json',\n  ROUTES: 'https://raw.githubusercontent.com/lk119/busmap/main/data/routes.json',\n  GRID: 'https://raw.githubusercontent.com/lk119/busmap/main/data/grid.json',\n  BUSSTOPS: 'https://raw.githubusercontent.com/lk119/busmap/main/data/bus_stops.json'\n};\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYmluemllIiwiYSI6ImNrcDcwbmI1dzB3MnoycHF0eXQ0czQ0MTMifQ.FNw2f1X8Olzz1NuTGNMaiw';\n\nconst MAP_STYLE = 'mapbox://styles/mapbox/dark-v10';\n\nconst OPTIONS = ['dec19_decile', 'mar20_decile', 'dec19_time', 'mar20_time', 'longer_decile','shorter_decile','longer_time','shorter_time', 'all_time', 'all_decile','dec19_decile_norm', 'mar20_decile_norm', 'dec19_time_norm', 'mar20_time_norm', 'longer_decile_norm','shorter_decile_norm','longer_time_norm','shorter_time_norm', 'all_time_norm', 'all_decile_norm','simd_only_norm'];\n\nconst OPTION_CHECK_ROUTES_DECILE = ['routes_decile'];\n\nconst OPTION_CHECK_ROUTES_TIME = ['routes_time'];\n\nconst OPTION_CHECK_ROUTES_TIME_NORM = ['routes_time_norm'];\n\nconst OPTION_CHECK_STOPS = ['stops'];\n\nconst OPTION_CHECK_SIMD_OUTLINE = ['simd_outline'];\n\nconst OPTION_CHECK_SIMD_FILL = ['simd_fill'];\n\n\nexport const COLOR_SCALE_DECILE = scaleThreshold()\n  .domain([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n  .range([\n    [255,201,4],\n    [255,224,0],\n    [255,166,0],\n    [255,142,31],\n    [255,117,51],\n    [255,93,68],\n    [252,68,85],\n    [239,45,100],\n    [221,24,115],\n    [199,14,128]\n\n  ]);\n\n  export const COLOR_SCALE_TIME = scaleThreshold()\n    .domain([-1000,-300,-30,0,30,300,600,1500])\n    .range([\n      [49,209,212],\n      [0,193,221],\n      [0,176,232],\n      [0,157,242],\n      [0,136,246],\n      [0,112,241],\n      [0,81,225],\n      [100,33,196]\n    ]);\n\n\n    export const COLOR_SCALE_TIME_DIFFERENCE_LONG = scaleThreshold()\n      .domain([0,30,60,90,120,180,300,1550])\n      .range([\n        [0,136,246],\n        [14,125,242],\n        [33,113,238],\n        [49,101,232],\n        [64,87,225],\n        [77,73,216],\n        [89,56,207],\n        [100,33,196]\n      ]);\n\n\n        export const COLOR_SCALE_TIME_DIFFERENCE_SHORT = scaleThreshold()\n          .domain([-1500,-300,-180,-120,-90,-60,-30,0])\n          .range([\n            [17,214,209],\n            [0,206,219],\n            [0,197,230],\n            [0,187,239],\n            [0,176,247],\n            [0,164,251],\n            [0,151,251],\n            [0,136,246],\n          ]);\n\n          export const COLOR_SCALE_TIME_DIFFERENCE_BOTH = scaleThreshold()\n            .domain([-1500,-300,-180,-120,-90,-60,-30,-10,10,30,60,90,120,180,300,1550])\n            .range([\n              [17,214,209],\n              [0,206,219],\n              [0,197,230],\n              [0,187,239],\n              [0,176,247],\n              [0,164,251],\n              [0,151,251],\n              [0,136,246],\n              [0,136,246],\n              [14,125,242],\n              [33,113,238],\n              [49,101,232],\n              [64,87,225],\n              [77,73,216],\n              [89,56,207],\n              [100,33,196]\n            ]);\n\n            export const COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE = scaleThreshold()\n              .domain([-1500,-10,10,1550])\n              .range([\n                [17,214,209],\n                [0,176,247],\n                [49,101,232],\n                [100,33,196]\n              ]);\n\n    export const COLOR_SCALE_TIME_TOTAL = scaleThreshold()\n      .domain ([0,100,200,300,400,500,800,1600])\n      .range([\n        [17,214,209],\n        [0,197,230],\n        [0,176,247],\n        [0,151,251],\n        [14,125,242],\n        [49,101,232],\n        [77,73,216],\n        [100,33,196]\n      ]);\n\n\nconst INITIAL_VIEW_STATE = {\n  longitude: -3.1883,\n  latitude: 55.9533,\n  zoom: 11,\n  pitch: 45,\n  bearing: 0,\n  maxZoom: 16,\n};\n\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\n\nconst landCover = [\n  [\n    [-123.0, 49.196],\n    [-123.0, 49.324],\n    [-123.306, 49.324],\n    [-123.306, 49.196]\n  ]\n];\n\n\n\nfunction getTooltip({\n  object\n}) {\n  return (\n    object && {\n      html: `\\\n  <div><b>Edinburgh Bus Map</b></div>\n  <div>${object.properties.decile} / SIMD decile</div>\n  <div><b>Minutes difference between Dec 19 and Mar 20 (actual)</b></div>\n  <div>${(Math.floor(object.properties.difference)/60).toFixed(2)} minutes</div>\n  <div><b>Minutes difference between Dec 19 and Mar 20 (normalised)</b></div>\n  <div>${(Math.floor(object.properties.difference_norm)/60).toFixed(2)} minutes</div>\n\n  `\n    }\n  );\n}\n\n//<div>${object.properties.difference.toFixed(2)} minutes</div>\n//  <div>${(Math.floor(object.properties.average_march)/60).toFixed(2)} minutes</div>\n\nexport default function App({\n  simd = DATA_URL.SIMD,\n  routes = DATA_URL.ROUTES,\n  grid = DATA_URL.GRID,\n  roads = DATA_URL.ROADS,\n  busstops = DATA_URL.BUSSTOPS,\n  mapStyle = MAP_STYLE\n}) {\n\n\n  const [viewState, setViewState] = useState(INITIAL_VIEW_STATE);\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n  const [routes_decile, setRoutes_decile] = useState(false);\n  const [routes_time, setRoutes_time] = useState(false);\n  const [routes_time_norm, setRoutes_time_norm] = useState(false);\n  const [stopsChecked, setStopsChecked] = useState(false);\n  const [simd_outline, setSimd_outline] = useState(false);\n  const [simd_fill, setSimd_fill] = useState(false);\n\n\n  var layerVisibility = {\n    dec19_decile: \"\",\n    mar20_decile: \"\",\n    dec19_time: \"\",\n    mar20_time: \"\",\n    routes_decile: \"\",\n    routes_time: \"\",\n    stops: \"\",\n    longer_decile: \"\",\n    shorter_decile: \"\",\n    longer_time: \"\",\n    shorter_time: \"\",\n    all_decile: \"\",\n    all_time: \"\",\n    dec19_decile_norm: \"\",\n    mar20_decile_norm: \"\",\n    dec19_time_norm: \"\",\n    mar20_time_norm: \"\",\n    routes_time_norm: \"\",\n    longer_decile_norm: \"\",\n    shorter_decile_norm: \"\",\n    longer_time_norm: \"\",\n    shorter_time_norm: \"\",\n    all_decile_norm: \"\",\n    all_time_norm: \"\",\n    simd_only: \"\",\n    simd_outline: \"\",\n    simd_fill: \"\",\n  }\n\n\n\n  OPTIONS.forEach(key => {\n    if (selectedMonth === key) {\n      layerVisibility[key] = true;\n    }\n  })\n\n  OPTION_CHECK_ROUTES_DECILE.forEach(key => {\n    if (routes_decile === true) {\n      layerVisibility[key] = true;\n    }\n  })\n\n  OPTION_CHECK_ROUTES_TIME.forEach(key => {\n    if (routes_time === true) {\n      layerVisibility[key] = true;\n    }\n  })\n\n  OPTION_CHECK_ROUTES_TIME_NORM.forEach(key => {\n    if (routes_time_norm === true) {\n      layerVisibility[key] = true;\n    }\n  })\n\n  OPTION_CHECK_STOPS.forEach(key => {\n    if (stopsChecked === true) {\n      layerVisibility[key] = true;\n    }\n  })\n\n\n    OPTION_CHECK_SIMD_OUTLINE.forEach(key => {\n      if (simd_outline === true) {\n        layerVisibility[key] = true;\n      }\n    })\n\n    OPTION_CHECK_SIMD_FILL.forEach(key => {\n      if (simd_fill === true) {\n        layerVisibility[key] = true;\n      }\n    })\n\n\n  const layers = [\n\n    new PolygonLayer({\n      id: 'simd_fill_faded',\n      data: simd,\n      filled: true,\n      extruded: false,\n      getPolygon: d => d.polygon,\n      getFillColor: d => COLOR_SCALE_DECILE(d.decile),\n      getLineColor: d => COLOR_SCALE_DECILE(d.decile),\n      getLineWidth: 5,\n      opacity: 0.01,\n      visible: layerVisibility.simd_fill\n    }),\n\n    new PolygonLayer({\n      id: 'simd_outline_thin',\n      data: simd,\n      filled: false,\n      extruded: false,\n      getPolygon: d => d.polygon,\n      getLineColor: d => COLOR_SCALE_DECILE(d.decile),\n      getLineWidth: 10,\n      opacity: 1,\n      visible: layerVisibility.simd_outline\n    }),\n\n        new GeoJsonLayer({\n          id: 'routes-time',\n          data: routes,\n          pickable: true,\n          stroked: false,\n          filled: true,\n          lineWidthScale: 20,\n          lineWidthMinPixels: 2,\n          getFillColor: f => COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE(f.properties.difference),\n          getLineColor: f => COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE(f.properties.difference),\n          getLineWidth: 1,\n          visible: layerVisibility.routes_time\n        }),\n\n        new GeoJsonLayer({\n          id: 'routes-time_norm',\n          data: routes,\n          pickable: true,\n          stroked: false,\n          filled: true,\n          lineWidthScale: 20,\n          lineWidthMinPixels: 2,\n          getFillColor: f => COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE(f.properties.difference_norm),\n          getLineColor: f => COLOR_SCALE_TIME_DIFFERENCE_SMALL_SCALE(f.properties.difference_norm),\n          getLineWidth: 1,\n          visible: layerVisibility.routes_time_norm\n        }),\n\n        new GeoJsonLayer({\n          id: 'routes-decile',\n          data: routes,\n          pickable: true,\n          stroked: false,\n          filled: true,\n          pointType: 'circle',\n          lineWidthScale: 20,\n          lineWidthMinPixels: 2,\n          getFillColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n          getLineColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n          getPointRadius: 100,\n          getLineWidth: 1,\n          visible: layerVisibility.routes_decile\n        }),\n\n        new GeoJsonLayer({\n          id: 'stops',\n          data: busstops,\n          opacity: 1,\n          stroked: false,\n          filled: true,\n          extruded: true,\n          wireframe: true,\n          getFillColor: [47,241,245,200],\n          getLineColor: [47,241,245,200],\n          getRadius: 10,\n          radiusMinPixels: 10,\n          radiusScale: 10,\n          visible: layerVisibility.stops\n        }),\n\n    new GeoJsonLayer({\n      id: 'longer_decile',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference > 10 ? Math.floor(f.properties.difference/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference > 10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.longer_decile\n    }),\n\n\n\n    new GeoJsonLayer({\n      id: 'shorter_decile',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference < -10 ? Math.floor(f.properties.difference/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference < -10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.shorter_decile\n\n      }),\n\n    new GeoJsonLayer({\n      id: 'longer_time',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference > 10 ? Math.floor(f.properties.difference/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference > 10 ? COLOR_SCALE_TIME_DIFFERENCE_LONG(f.properties.difference): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.longer_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'shorter_time',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference < -10 ? Math.floor(f.properties.difference/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference < -10 ? COLOR_SCALE_TIME_DIFFERENCE_SHORT(f.properties.difference): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.shorter_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_decile1',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference > 10 ? Math.floor(f.properties.difference/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference > 10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_decile\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_decile2',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference < -10 ? Math.floor(f.properties.difference/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference < -10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_decile\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_time1',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference > 10 ? Math.floor(f.properties.difference/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference > 10 ? COLOR_SCALE_TIME_DIFFERENCE_BOTH(f.properties.difference): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_time2',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference < -10 ? Math.floor(f.properties.difference/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference < -10 ? COLOR_SCALE_TIME_DIFFERENCE_BOTH(f.properties.difference): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'longer_decile_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm > 10 ? Math.floor(f.properties.difference_norm/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm > 10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.longer_decile_norm\n    }),\n\n\n\n    new GeoJsonLayer({\n      id: 'shorter_decile_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm < -10 ? Math.floor(f.properties.difference_norm/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm < -10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.shorter_decile_norm\n\n      }),\n\n    new GeoJsonLayer({\n      id: 'longer_time_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm > 10 ? Math.floor(f.properties.difference_norm/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm > 10 ? COLOR_SCALE_TIME_DIFFERENCE_LONG(f.properties.difference_norm): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.longer_time_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'shorter_time_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm < -10 ? Math.floor(f.properties.difference_norm/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm < -10 ? COLOR_SCALE_TIME_DIFFERENCE_SHORT(f.properties.difference_norm): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.shorter_time_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_decile1_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm > 10 ? Math.floor(f.properties.difference_norm/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm > 10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_decile_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_decile2_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm < -10 ? Math.floor(f.properties.difference_norm/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm < -10 ? COLOR_SCALE_DECILE(f.properties.decile): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_decile_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_time1_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm > 10 ? Math.floor(f.properties.difference_norm/60): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm > 10 ? COLOR_SCALE_TIME_DIFFERENCE_BOTH(f.properties.difference_norm): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm > 10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_time_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'all_time2_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => (f.properties.difference_norm < -10 ? Math.floor(f.properties.difference_norm/60*-1): 0),\n      elevationScale: 200,\n      getFillColor: f => (f.properties.difference_norm < -10 ? COLOR_SCALE_TIME_DIFFERENCE_BOTH(f.properties.difference_norm): [255,255,255,1]),\n      getLineColor: f => (f.properties.difference_norm < -10 ? [220,220,220]: [169,169,169,100]),\n      pickable: true,\n      visible: layerVisibility.all_time\n    }),\n\n\n    new GeoJsonLayer({\n      id: 'dec19_decile',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.dec_average/60),\n      elevationScale: 40,\n      getFillColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.dec19_decile\n    }),\n\n\n\n    new GeoJsonLayer({\n      id: 'mar20_decile',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.mar_average/60),\n      elevationScale: 40,\n      getFillColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n      getLineColor: [2220,220,220],\n      pickable: true,\n      visible: layerVisibility.mar20_decile\n    }),\n\n\n    new GeoJsonLayer({\n      id: 'dec19_time',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.dec_average/60),\n      elevationScale: 40,\n      getFillColor: f => (f.properties.dec_average > 0 ? COLOR_SCALE_TIME_TOTAL(f.properties.dec_average): [255,255,255,1]),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.dec19_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'mar20_time',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.mar_average/60),\n      elevationScale: 40,\n      getFillColor: f => (f.properties.mar_average > 0 ? COLOR_SCALE_TIME_TOTAL(f.properties.mar_average): [255,255,255,1]),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.mar20_time\n    }),\n\n    new GeoJsonLayer({\n      id: 'dec19_decile_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.dec_average_norm/60),\n      elevationScale: 40,\n      getFillColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.dec19_decile_norm\n    }),\n\n\n\n    new GeoJsonLayer({\n      id: 'mar20_decile_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.mar_average_norm/60),\n      elevationScale: 40,\n      getFillColor: f => COLOR_SCALE_DECILE(f.properties.decile),\n      getLineColor: [2220,220,220],\n      pickable: true,\n      visible: layerVisibility.mar20_decile_norm\n    }),\n\n\n    new GeoJsonLayer({\n      id: 'dec19_time_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.dec_average_norm/60),\n      elevationScale: 40,\n      getFillColor: f => (f.properties.dec_average_norm > 0 ? COLOR_SCALE_TIME_TOTAL(f.properties.dec_average_norm): [255,255,255,1]),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.dec19_time_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'mar20_time_norm',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: f => Math.floor(f.properties.mar_average_norm/60),\n      elevationScale: 40,\n      getFillColor: f => (f.properties.mar_average_norm > 0 ? COLOR_SCALE_TIME_TOTAL(f.properties.mar_average_norm): [255,255,255,1]),\n      getLineColor: [220,220,220],\n      pickable: true,\n      visible: layerVisibility.mar20_time_norm\n    }),\n\n    new GeoJsonLayer({\n      id: 'invisible',\n      data: grid,\n      opacity: 1,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      getElevation: 2000,\n      getFillColor: [255,255,255,0],\n      getLineColor: [255,255,255,0],\n      pickable: true,\n      visible: true\n    })\n\n\n];\n\n  return ( <\n    >\n    <\n    DeckGL layers = {\n      layers\n    }\n    initialViewState = {\n      INITIAL_VIEW_STATE\n    }\n    controller = {\n      true\n    }\n    getTooltip = {\n      getTooltip\n    }\n\n    onViewStateChange = {\n      (nextViewState) => {\n        setViewState(nextViewState.viewState);\n      }\n    } >\n    <\n    StaticMap mapboxApiAccessToken = {\n      MAPBOX_ACCESS_TOKEN\n    }\n    mapStyle = {\n      MAP_STYLE\n    }\n    /> < /\n    DeckGL >\n    <div id=\"control-panel\">\n    \t<div>\n    \t\t<h1><b>Edinburgh City Buses</b></h1>\n    \t\t<p>Comparing December 2019 and March 2020 Lothian bus journey times across SIMD zones.</p>\n    \t</div>\n    \t<div>\n    \t\t<p><b>HINT: </b> Hold down shift and click to rotate map</p>\n        <div class=\"data-links\">\n          <div class=\"date-ranges\">\n            <h6>Bus GPS data date ranges:</h6>\n            <p>10 December 2019 00:00:00 to 20 December 2019 23:59:59</p>\n            <p>10 March 2020 00:00:00 to 20 March 2020 23:59:59</p>\n          </div>\n          <h5> Bus Data Source:  </h5> <a href=\"https://tfe-opendata.readme.io/\">  Transport for Edinburgh Open Data</a>\n          <h5> SIMD Data Source:  </h5> <a href=\"https://www.spatialdata.gov.scot/geonetwork/srv/eng/catalog.search#/metadata/02866b0b-66e5-46ab-9b1c-d433dc3c2fae\">  Scottish Spatial Data</a> </div>\n\n    \t</div>\n      <div id=\"legend-container\">\n        <h3>SIMD Deciles:</h3> <img src={process.env.PUBLIC_URL + \"/legend.png\"} alt=\"SIMD colour scale\" style={{height: \"30px\", width: \"95%\"}}></img>\n        <p>Where 1 is the most deprived 10% of the Scottish population and 10 is the least deprived 10% of the Scottish population.</p>\n        <h3>Time Difference:</h3> <img src={process.env.PUBLIC_URL + \"/legend_time.png\"} alt=\"Time difference colour scale\" style={{height: \"30px\", width: \"95%\"}}></img>\n      </div>\n\n    \t<div class=\"layers\">\n    \t\t<h2>LAYERS</h2>\n    \t\t<div class=\"toggles\">\n    \t\t\t<div class=\"button-toggles\">\n    \t\t\t\t<label> Clear Grid Layers </label>\n    \t\t\t\t<input id=\"clear-layers\" name=\"month\" type=\"radio\" value={ \"\"} checked={ selectedMonth===\"\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t</div>\n    \t\t<div class=\"button-toggles\">\n    \t\t\t<label>SIMD Fill\n    \t\t\t\t< /label>\n    \t\t\t\t\t<input id=\"simd_fill\" name=\"simd_fill\" type=\"checkbox\" defaultChecked={ simd_fill} onChange={(e)=> {setSimd_fill(!simd_fill); }}/> </div>\n    \t\t<div class=\"button-toggles\">\n    \t\t\t<label>SIMD Outline\n    \t\t\t\t< /label>\n    \t\t\t\t\t<input id=\"simd_outline\" name=\"simd_outline\" type=\"checkbox\" defaultChecked={ simd_outline} onChange={(e)=> {setSimd_outline(!simd_outline); }}/> </div>\n    \t\t<div class=\"button-toggles\">\n    \t\t\t<label> Bus Stops\n    \t\t\t\t< /label>\n    \t\t\t\t\t<input id=\"stops\" name=\"stops\" type=\"checkbox\" defaultChecked={ stopsChecked} onChange={(e)=> {setStopsChecked(!stopsChecked); }}/> </div>\n    \t\t<div class=\"button-toggles\">\n    \t\t\t<label> Routes by Decile\n    \t\t\t\t< /label>\n    \t\t\t\t\t<input id=\"routes-decile\" name=\"routes-decile\" type=\"checkbox\" defaultChecked={ routes_decile} onChange={(e)=> {setRoutes_decile(!routes_decile); }}/> </div>\n    \t\t<div class=\"button-toggles\">\n    \t\t\t<label> Routes by Time (actual)\n    \t\t\t\t< /label>\n    \t\t\t\t\t<input id=\"routes-time_norm\" name=\"routes-time\" type=\"checkbox\" defaultChecked={ routes_time} onChange={(e)=> {setRoutes_time(!routes_time); }}/> </div>\n              <div class=\"button-toggles\">\n          \t\t\t<label> Routes by Time (normalised)\n          \t\t\t\t< /label>\n          \t\t\t\t\t<input id=\"routes-time_norm\" name=\"routes-time_norm\" type=\"checkbox\" defaultChecked={ routes_time_norm} onChange={(e)=> {setRoutes_time_norm(!routes_time_norm); }}/> </div>\n\n    \t\t<div class=\"difference-view\">\n    \t\t\t<h3>TIME DIFFERENCE</h3>\n    \t\t\t<p>Height represents the difference in minutes buses spent in a grid cell between December 2019 and March 2020.</p>\n          <p><b>Actual time difference</b></p>\n          <p>The <em>actual difference</em> in minutes buses spent in a grid cell.</p>\n\n\n    \t\t\t<div class=\"container1\">\n    \t\t\t\t<h4>Shorter in March:</h4>\n    \t\t\t\t<div class=\"button\">\n    \t\t\t\t\t<label>By SIMD Decile\n    \t\t\t\t\t\t< /label>\n    \t\t\t\t\t\t\t<input id=\"grid\" name=\"month\" type=\"radio\" value={ \"shorter_decile\"} checked={ selectedMonth===\"shorter_decile\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t\t\t<div class=\"button\">\n    \t\t\t\t\t<label>By Time\n    \t\t\t\t\t\t< /label>\n    \t\t\t\t\t\t\t<input id=\"grid\" name=\"month\" type=\"radio\" value={ \"shorter_time\"} checked={ selectedMonth===\"shorter_time\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"container2\">\n    \t\t\t\t<h4>Longer in March:</h4>\n    \t\t\t\t<div class=\"button\">\n    \t\t\t\t\t<label>By SIMD Decile\n    \t\t\t\t\t\t< /label>\n    \t\t\t\t\t\t\t<input id=\"grid\" name=\"month\" type=\"radio\" value={ \"longer_decile\"} checked={ selectedMonth===\"longer_decile\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t\t\t<div class=\"button\">\n    \t\t\t\t\t<label>By Time\n    \t\t\t\t\t\t< /label>\n    \t\t\t\t\t\t\t<input id=\"grid\" name=\"month\" type=\"radio\" value={ \"longer_time\"} checked={ selectedMonth===\"longer_time\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t\t</div>\n          <h4>View all time differences (shorter and longer):</h4>\n          <div class=\"button\">\n            <label>By SIMD Decile\n              < /label>\n                <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"all_decile\"} checked={ selectedMonth===\"all_decile\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n          <div class=\"button\">\n          <label>By Time\n            < /label>\n              <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"all_time\"} checked={ selectedMonth===\"all_time\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n\n          <p><b>Normalised time difference</b></p>\n          <p>The <em>normalised difference</em> in minutes buses spent in a grid cell. Calculated by multiplying the metres per second by the mean distance (exluding outliers).</p>\n\n          <div class=\"container1\">\n            <h4>Shorter in March:</h4>\n            <div class=\"button\">\n              <label>By SIMD Decile\n                < /label>\n                  <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"shorter_decile_norm\"} checked={ selectedMonth===\"shorter_decile_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n            <div class=\"button\">\n              <label>By Time\n                < /label>\n                  <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"shorter_time_norm\"} checked={ selectedMonth===\"shorter_time_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n          </div>\n\n          <div class=\"container2\">\n            <h4>Longer in March:</h4>\n            <div class=\"button\">\n              <label>By SIMD Decile\n                < /label>\n                  <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"longer_decile_norm\"} checked={ selectedMonth===\"longer_decile_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n            <div class=\"button\">\n              <label>By Time\n                < /label>\n                  <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"longer_time_norm\"} checked={ selectedMonth===\"longer_time_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n          </div>\n          <h4>View all time differences (shorter and longer):</h4>\n          <div class=\"button\">\n            <label>By SIMD Decile\n              < /label>\n                <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"all_decile_norm\"} checked={ selectedMonth===\"all_decile_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n          <div class=\"button\">\n            <label>By Time\n              < /label>\n                <input id=\"grid\" name=\"month\" type=\"radio\" value={ \"all_time_norm\"} checked={ selectedMonth===\"all_time_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n    \t\t</div>\n\n    \t</div>\n      <h3>AVERAGE TIME</h3>\n      <p>Height represents the average total minutes buses spent in a grid cell.</p>\n      <p><b>Actual time</b></p>\n      <p>The <em>actual average time</em> in minutes buses spent in a grid cell.</p>\n      <div class=\"container1\">\n        <h4>December 2019:</h4>\n        <div class=\"button\">\n          <label>By SIMD Decile\n            < /label>\n              <input id=\"dec19_decile\" name=\"month\" type=\"radio\" value={ \"dec19_decile\"} checked={ selectedMonth===\"dec19_decile\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n        <div class=\"button\">\n          <label>By Time\n            < /label>\n              <input id=\"dec19_time\" name=\"month\" type=\"radio\" value={ \"dec19_time\"} checked={ selectedMonth===\"dec19_time\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n      </div>\n      <div class=\"container2\">\n        <h4>March 2020:</h4>\n        <div class=\"button\">\n          <label>By SIMD Decile\n            < /label>\n              <input id=\"mar20_decile\" name=\"month\" type=\"radio\" value={ \"mar20_decile\"} checked={ selectedMonth===\"mar20_decile\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n        <div class=\"button\">\n          <label>By Time\n            < /label>\n              <input id=\"mar20_time\" name=\"month\" type=\"radio\" value={ \"mar20_time\"} checked={ selectedMonth===\"mar20_time\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n      </div>\n      <p><b>Normalised average time</b></p>\n      <p>The <em>normalised average time</em> in minutes buses spent in a grid cell. Calculated by multiplying the metres per second by the mean distance (exluding outliers).</p>\n      <div class=\"container1\">\n        <h4>December 2019:</h4>\n        <div class=\"button\">\n          <label>By SIMD Decile\n            < /label>\n              <input id=\"dec19_decile_norm\" name=\"month\" type=\"radio\" value={ \"dec19_decile_norm\"} checked={ selectedMonth===\"dec19_decile_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n        <div class=\"button\">\n          <label>By Time\n            < /label>\n              <input id=\"dec19_time_norm\" name=\"month\" type=\"radio\" value={ \"dec19_time_norm\"} checked={ selectedMonth===\"dec19_time_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n      </div>\n      <div class=\"container2\">\n        <h4>March 2020:</h4>\n        <div class=\"button\">\n          <label>By SIMD Decile\n            < /label>\n              <input id=\"mar20_decile_norm\" name=\"month\" type=\"radio\" value={ \"mar20_decile_norm\"} checked={ selectedMonth===\"mar20_decile_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n        <div class=\"button\">\n          <label>By Time\n            < /label>\n              <input id=\"mar20_time_norm\" name=\"month\" type=\"radio\" value={ \"mar20_time_norm\"} checked={ selectedMonth===\"mar20_time_norm\" } onChange={ (e)=> { setSelectedMonth(e.target.value); }}/> </div>\n      </div>\n\n\n    </div>\n    </>\n  );\n}\n\nexport function renderToDOM(container) {\n  render( < App / > , container);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}